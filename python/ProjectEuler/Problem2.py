"""
projecteuler.net problem 2.

Even Fibonacci numbers.

Each new term in the Fibonacci sequence is generated by adding the 
previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed 
four million, find the sum of the even-valued terms.
"""

LIMIT = 4000000

def solution1():
    """
    Solved using a while loop and a modulo 2 operation
    for even check.
    """
    current = 1
    past = 1
    total = 0
    while current < LIMIT:
        if current % 2 == 0:
            total += current
        current, past = current + past, current
    return total

def solution2():
    """
    Every third Fibonacci number is even, we can get rid
    of the even check.
    """
    first = 1
    second = 1
    third = 2
    total = 0
    while third < LIMIT:
        total += third
        first = third + second
        second = first + third
        third = second + first
    return total

def solution3(n1, n2, acc):
    """
    Recursive solution.
    """
    if n2 > LIMIT:
        return acc
    if n2 % 2 == 0:
        acc += n2
    return solution3(n2, n1+n2, acc)

def solution4(n1, n2, n3, acc):
    """
    Recursive solution. Every third Fibonacci number is even, 
    we can get rid of the even check.
    """
    if n3 > LIMIT:
        return acc
    return solution4(n3+n2, n3*2+n2, n3*3+n2*2, acc+n3)


print solution1()
print solution2()
print solution3(1, 1, 0)
print solution4(1, 1, 2, 0)
