/*
projecteuler.net problem 12.

Highly divisible triangular number.

The sequence of triangle numbers is generated by adding the natural numbers. 
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first
ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred 
divisors?
*/

public class Problem12 {
    
    /** Return the nth triangle number */
    public static long nthTriangleNumber(long n) {
        return ((n + 1) * n) / 2;
    }

    // !!! There's a much faster method of getting the number of factors, 
    // check problem notes for details!
    /** Counts the factors of a number */
    public static int numberOfFactors(long n) {
        double limit = Math.sqrt(n);
        int count = 0;
        for (long i = 1; i <= limit; i++) {
            if (n % i == 0) {
                long otherFactor = n / i;
                if (otherFactor != i) {
                    count += 2;
                } else {
                    count ++;
                }
            }
        }
        return count;
    }

    /** Solution */
    public static long solution() {
        long current = 1;
        while (true) {
            long trinum = nthTriangleNumber(current);
            if (numberOfFactors(trinum) > 500) {
                return trinum;
            }
            current++;
        }
    }

    public static void main(String[] args) {
        System.out.println(solution());
        // for (int i = 1; i < 10; i++) {
        //     System.out.println(String.format("%d %d", nthTriangleNumber(i), numberOfFactors(nthTriangleNumber(i))));
        // }
    }
}